// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eRestoran.WebAPI.Database;

namespace eRestoran.WebAPI.Migrations
{
    [DbContext(typeof(eRestoranContext))]
    [Migration("20200831195302_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eRestoran.WebAPI.Database.Award", b =>
                {
                    b.Property<int>("AwardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("AwardDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AwardId");

                    b.HasIndex("UserId");

                    b.ToTable("Award");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityName")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CityId");

                    b.ToTable("City");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DiscountDate")
                        .HasColumnType("date");

                    b.Property<int>("DiscountTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("RestaurantMenuItemId")
                        .HasColumnName("RestaurantMenu_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DiscountId");

                    b.HasIndex("DiscountTypeId");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("RestaurantMenuItemId");

                    b.HasIndex("UserId");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.DiscountType", b =>
                {
                    b.Property<int>("DiscountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.HasKey("DiscountTypeId");

                    b.ToTable("DiscountType");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gender1")
                        .HasColumnName("Gender")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("GenderId");

                    b.ToTable("Gender");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.ItemCategory", b =>
                {
                    b.Property<int>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.HasKey("ItemCategoryId");

                    b.HasIndex("ItemTypeId");

                    b.ToTable("ItemCategory");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.ItemType", b =>
                {
                    b.Property<int>("ItemTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.HasKey("ItemTypeId");

                    b.ToTable("ItemType");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.MenuItemsReview", b =>
                {
                    b.Property<int>("MenuItemsReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MenuItems_ReviewId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantMenuItemId")
                        .HasColumnName("RestaurantMenu_ItemId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("MenuItemsReviewId");

                    b.HasIndex("RestaurantMenuItemId");

                    b.HasIndex("UserId");

                    b.ToTable("MenuItems_Review");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Quantity", b =>
                {
                    b.Property<int>("QuantityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Mark")
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("QuantityId");

                    b.ToTable("Quantity");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CloseAt")
                        .HasColumnType("datetime");

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("NumberOfTables")
                        .HasColumnType("int");

                    b.Property<DateTime?>("OpenAt")
                        .HasColumnType("datetime");

                    b.Property<string>("RestaurantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("RestaurantId");

                    b.HasIndex("CityId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.RestaurantMenuItem", b =>
                {
                    b.Property<int>("RestaurantMenuItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RestaurantMenu_ItemId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Image")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(35)")
                        .HasMaxLength(35);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("QuantityId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantMenuItemId");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("QuantityId");

                    b.ToTable("RestaurantMenu_Item");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.RestaurantReview", b =>
                {
                    b.Property<int>("RestaurantReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Restaurant_ReviewId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RestaurantReviewId");

                    b.HasIndex("UserId");

                    b.ToTable("Restaurant_Review");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasMaxLength(25);

                    b.HasKey("RoleId");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.SuperOffer", b =>
                {
                    b.Property<int>("SuperOfferId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("DiscountType")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountValue")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int?>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OfferEnd")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("OfferStart")
                        .HasColumnType("datetime");

                    b.Property<int?>("RestaurantMenuItemId")
                        .HasColumnName("RestaurantMenu_ItemId")
                        .HasColumnType("int");

                    b.HasKey("SuperOfferId");

                    b.HasIndex("DiscountType");

                    b.HasIndex("ItemCategoryId");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("RestaurantMenuItemId");

                    b.ToTable("SuperOffer");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("UserId");

                    b.HasIndex("CityId");

                    b.HasIndex("GenderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Visit", b =>
                {
                    b.Property<int>("VisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateOfVisit")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VisitId");

                    b.HasIndex("UserId");

                    b.ToTable("Visit");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.VisitorRecommendation", b =>
                {
                    b.Property<int>("VisitorRecommendationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Visitor_RecommendationId")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecommendationDescription")
                        .HasColumnName("Recommendation_Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("VisitorRecommendationId");

                    b.HasIndex("UserId");

                    b.ToTable("Visitor_Recommendation");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Award", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("Award")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Award_User_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Discount", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.DiscountType", "DiscountType")
                        .WithMany("Discount")
                        .HasForeignKey("DiscountTypeId")
                        .HasConstraintName("DiscountType_Discount_FK")
                        .IsRequired();

                    b.HasOne("eRestoran.WebAPI.Database.ItemCategory", "ItemCategory")
                        .WithMany("Discount")
                        .HasForeignKey("ItemCategoryId")
                        .HasConstraintName("ItemCategory_Discount_FK");

                    b.HasOne("eRestoran.WebAPI.Database.ItemType", "ItemType")
                        .WithMany("Discount")
                        .HasForeignKey("ItemTypeId")
                        .HasConstraintName("ItemType_Discount_FK");

                    b.HasOne("eRestoran.WebAPI.Database.RestaurantMenuItem", "RestaurantMenuItem")
                        .WithMany("Discount")
                        .HasForeignKey("RestaurantMenuItemId")
                        .HasConstraintName("RestaurantMenu_Item_Discount_FK");

                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("Discount")
                        .HasForeignKey("UserId")
                        .HasConstraintName("User_Discount_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.ItemCategory", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.ItemType", "ItemType")
                        .WithMany("ItemCategory")
                        .HasForeignKey("ItemTypeId")
                        .HasConstraintName("ItemTypeId_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.MenuItemsReview", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.RestaurantMenuItem", "RestaurantMenuItem")
                        .WithMany("MenuItemsReview")
                        .HasForeignKey("RestaurantMenuItemId")
                        .HasConstraintName("RestaurantMenu_ItemId_FK")
                        .IsRequired();

                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("MenuItemsReview")
                        .HasForeignKey("UserId")
                        .HasConstraintName("UserId_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Restaurant", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.City", "City")
                        .WithMany("Restaurant")
                        .HasForeignKey("CityId")
                        .HasConstraintName("CityId_Restaurant_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.RestaurantMenuItem", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.ItemCategory", "ItemCategory")
                        .WithMany("RestaurantMenuItem")
                        .HasForeignKey("ItemCategoryId")
                        .HasConstraintName("ItemCategoryId_FK")
                        .IsRequired();

                    b.HasOne("eRestoran.WebAPI.Database.Quantity", "Quantity")
                        .WithMany("RestaurantMenuItem")
                        .HasForeignKey("QuantityId")
                        .HasConstraintName("QuantityId_FK");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.RestaurantReview", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("RestaurantReview")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Restaurant_Review_UserId_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.SuperOffer", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.DiscountType", "DiscountTypeNavigation")
                        .WithMany("SuperOffer")
                        .HasForeignKey("DiscountType")
                        .HasConstraintName("SuperOffer_DiscountType_FK");

                    b.HasOne("eRestoran.WebAPI.Database.ItemCategory", "ItemCategory")
                        .WithMany("SuperOffer")
                        .HasForeignKey("ItemCategoryId")
                        .HasConstraintName("ItemCategory_SuperOffer_FK");

                    b.HasOne("eRestoran.WebAPI.Database.ItemType", "ItemType")
                        .WithMany("SuperOffer")
                        .HasForeignKey("ItemTypeId")
                        .HasConstraintName("ItemType_SuperOffer_FK");

                    b.HasOne("eRestoran.WebAPI.Database.RestaurantMenuItem", "RestaurantMenuItem")
                        .WithMany("SuperOffer")
                        .HasForeignKey("RestaurantMenuItemId")
                        .HasConstraintName("RestaurantMenu_Item_SuperOffer_FK");
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.User", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.City", "City")
                        .WithMany("User")
                        .HasForeignKey("CityId")
                        .HasConstraintName("CityId_FK")
                        .IsRequired();

                    b.HasOne("eRestoran.WebAPI.Database.Gender", "Gender")
                        .WithMany("User")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("GenderId_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.UserRole", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.Role", "Role")
                        .WithMany("UserRole")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("Role_UserRole_FK")
                        .IsRequired();

                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("UserRole")
                        .HasForeignKey("UserId")
                        .HasConstraintName("User_UserRole_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.Visit", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("Visit")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Visit_UserId_FK")
                        .IsRequired();
                });

            modelBuilder.Entity("eRestoran.WebAPI.Database.VisitorRecommendation", b =>
                {
                    b.HasOne("eRestoran.WebAPI.Database.User", "User")
                        .WithMany("VisitorRecommendation")
                        .HasForeignKey("UserId")
                        .HasConstraintName("Visitor_Recommendation_UserId_FK")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
